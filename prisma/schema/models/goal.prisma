model Goal {
  id           String   @id @default(uuid()) @db.Uuid
  name         String
  description  String
  user_id      String   @db.Uuid
  goal_type_id String   @db.Uuid
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  user              User             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  goal_type         GoalType         @relation(fields: [goal_type_id], references: [id])
  goal_field_values GoalFieldValue[]
  progress          GoalProgress[]
  daily_quests      DailyQuest[]

  @@map("goal")
}

model GoalFieldValue {
  id                 String @id @default(uuid()) @db.Uuid
  goal_type_field_id String @db.Uuid
  goal_id            String @db.Uuid
  user_id            String @db.Uuid
  value              String

  goal_type_field GoalTypeField @relation(fields: [goal_type_field_id], references: [id], onDelete: Cascade)
  goal            Goal          @relation(fields: [goal_id], references: [id], onDelete: Cascade)
  user            User          @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("goal_field_value")
}

model GoalBoardImage {
  id             String   @id @default(uuid()) @db.Uuid
  user_id        String   @db.Uuid
  file_path      String
  thumbnail_path String
  created_at     DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("goal_board_images")
}
