model User {
  id String @id @default(uuid()) @db.Uuid
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  auth_providers          UserAuthProvider[]
  password_reset_tokens   PasswordResetToken[]
  refresh_tokens          RefreshToken[]
  goals                   Goal[]
  field_values            GoalFieldValue[]
  progress                GoalProgress[]
  daily_quests            DailyQuest[]
  daily_quest_completions DailyQuestCompletion[]
  goal_board_images       GoalBoardImage[]

  @@map("user")
}

model UserAuthProvider {
  id               String @id @default(uuid()) @db.Uuid
  user_id          String @db.Uuid
  provider         String
  provider_user_id String
  created_at       DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([provider, provider_user_id])
  @@map("user_auth_provider")
}

model PasswordResetToken {
  id      String @id @default(uuid()) @db.Uuid
  user_id String @db.Uuid
  token      String
  expires_at DateTime
  used       Boolean  @default(false)
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@index([token])
  @@map("password_reset_token")
}

model RefreshToken {
  id      String @id @default(uuid()) @db.Uuid
  user_id String @db.Uuid
  token      String   @unique
  revoked    Boolean  @default(false)
  expires_at DateTime
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("refresh_token")
}
